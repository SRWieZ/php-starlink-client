<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/dish.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.DishObstructionStats</code>
 */
class DishObstructionStats extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional bool currently_obstructed = 5 [json_name = "currentlyObstructed"];</code>
     */
    protected $currently_obstructed = null;

    /**
     * Generated from protobuf field <code>optional float fraction_obstructed = 1 [json_name = "fractionObstructed"];</code>
     */
    protected $fraction_obstructed = null;

    /**
     * Generated from protobuf field <code>optional float time_obstructed = 9 [json_name = "timeObstructed"];</code>
     */
    protected $time_obstructed = null;

    /**
     * Generated from protobuf field <code>optional float valid_s = 4 [json_name = "validS"];</code>
     */
    protected $valid_s = null;

    /**
     * Generated from protobuf field <code>optional uint32 patches_valid = 10 [json_name = "patchesValid"];</code>
     */
    protected $patches_valid = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type bool $currently_obstructed
     * @type float $fraction_obstructed
     * @type float $time_obstructed
     * @type float $valid_s
     * @type int $patches_valid
     *           }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\Spacex\Api\Device\Dish::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional bool currently_obstructed = 5 [json_name = "currentlyObstructed"];</code>
     *
     * @return bool
     */
    public function getCurrentlyObstructed()
    {
        return isset($this->currently_obstructed) ? $this->currently_obstructed : false;
    }

    public function hasCurrentlyObstructed()
    {
        return isset($this->currently_obstructed);
    }

    public function clearCurrentlyObstructed()
    {
        unset($this->currently_obstructed);
    }

    /**
     * Generated from protobuf field <code>optional bool currently_obstructed = 5 [json_name = "currentlyObstructed"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setCurrentlyObstructed($var)
    {
        GPBUtil::checkBool($var);
        $this->currently_obstructed = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float fraction_obstructed = 1 [json_name = "fractionObstructed"];</code>
     *
     * @return float
     */
    public function getFractionObstructed()
    {
        return isset($this->fraction_obstructed) ? $this->fraction_obstructed : 0.0;
    }

    public function hasFractionObstructed()
    {
        return isset($this->fraction_obstructed);
    }

    public function clearFractionObstructed()
    {
        unset($this->fraction_obstructed);
    }

    /**
     * Generated from protobuf field <code>optional float fraction_obstructed = 1 [json_name = "fractionObstructed"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setFractionObstructed($var)
    {
        GPBUtil::checkFloat($var);
        $this->fraction_obstructed = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float time_obstructed = 9 [json_name = "timeObstructed"];</code>
     *
     * @return float
     */
    public function getTimeObstructed()
    {
        return isset($this->time_obstructed) ? $this->time_obstructed : 0.0;
    }

    public function hasTimeObstructed()
    {
        return isset($this->time_obstructed);
    }

    public function clearTimeObstructed()
    {
        unset($this->time_obstructed);
    }

    /**
     * Generated from protobuf field <code>optional float time_obstructed = 9 [json_name = "timeObstructed"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setTimeObstructed($var)
    {
        GPBUtil::checkFloat($var);
        $this->time_obstructed = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float valid_s = 4 [json_name = "validS"];</code>
     *
     * @return float
     */
    public function getValidS()
    {
        return isset($this->valid_s) ? $this->valid_s : 0.0;
    }

    public function hasValidS()
    {
        return isset($this->valid_s);
    }

    public function clearValidS()
    {
        unset($this->valid_s);
    }

    /**
     * Generated from protobuf field <code>optional float valid_s = 4 [json_name = "validS"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setValidS($var)
    {
        GPBUtil::checkFloat($var);
        $this->valid_s = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 patches_valid = 10 [json_name = "patchesValid"];</code>
     *
     * @return int
     */
    public function getPatchesValid()
    {
        return isset($this->patches_valid) ? $this->patches_valid : 0;
    }

    public function hasPatchesValid()
    {
        return isset($this->patches_valid);
    }

    public function clearPatchesValid()
    {
        unset($this->patches_valid);
    }

    /**
     * Generated from protobuf field <code>optional uint32 patches_valid = 10 [json_name = "patchesValid"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setPatchesValid($var)
    {
        GPBUtil::checkUint32($var);
        $this->patches_valid = $var;

        return $this;
    }
}

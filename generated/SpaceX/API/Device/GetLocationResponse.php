<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/device.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.GetLocationResponse</code>
 */
class GetLocationResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.LLAPosition lla = 1 [json_name = "lla"];</code>
     */
    protected $lla = null;

    /**
     * Generated from protobuf field <code>optional double sigma_m = 4 [json_name = "sigmaM"];</code>
     */
    protected $sigma_m = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.PositionSource source = 3 [json_name = "source"];</code>
     */
    protected $source = null;

    /**
     * Generated from protobuf field <code>optional double horizontal_speed_mps = 5 [json_name = "horizontalSpeedMps"];</code>
     */
    protected $horizontal_speed_mps = null;

    /**
     * Generated from protobuf field <code>optional double vertical_speed_mps = 6 [json_name = "verticalSpeedMps"];</code>
     */
    protected $vertical_speed_mps = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type \SpaceX\API\Device\LLAPosition $lla
     * @type float $sigma_m
     * @type int $source
     * @type float $horizontal_speed_mps
     * @type float $vertical_speed_mps
     *             }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Device::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.LLAPosition lla = 1 [json_name = "lla"];</code>
     *
     * @return \SpaceX\API\Device\LLAPosition|null
     */
    public function getLla()
    {
        return $this->lla;
    }

    public function hasLla()
    {
        return isset($this->lla);
    }

    public function clearLla()
    {
        unset($this->lla);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.LLAPosition lla = 1 [json_name = "lla"];</code>
     *
     * @param  \SpaceX\API\Device\LLAPosition  $var
     * @return $this
     */
    public function setLla($var)
    {
        GPBUtil::checkMessage($var, \SpaceX\API\Device\LLAPosition::class);
        $this->lla = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double sigma_m = 4 [json_name = "sigmaM"];</code>
     *
     * @return float
     */
    public function getSigmaM()
    {
        return isset($this->sigma_m) ? $this->sigma_m : 0.0;
    }

    public function hasSigmaM()
    {
        return isset($this->sigma_m);
    }

    public function clearSigmaM()
    {
        unset($this->sigma_m);
    }

    /**
     * Generated from protobuf field <code>optional double sigma_m = 4 [json_name = "sigmaM"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setSigmaM($var)
    {
        GPBUtil::checkDouble($var);
        $this->sigma_m = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.PositionSource source = 3 [json_name = "source"];</code>
     *
     * @return int
     */
    public function getSource()
    {
        return isset($this->source) ? $this->source : 0;
    }

    public function hasSource()
    {
        return isset($this->source);
    }

    public function clearSource()
    {
        unset($this->source);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.PositionSource source = 3 [json_name = "source"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\PositionSource::class);
        $this->source = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double horizontal_speed_mps = 5 [json_name = "horizontalSpeedMps"];</code>
     *
     * @return float
     */
    public function getHorizontalSpeedMps()
    {
        return isset($this->horizontal_speed_mps) ? $this->horizontal_speed_mps : 0.0;
    }

    public function hasHorizontalSpeedMps()
    {
        return isset($this->horizontal_speed_mps);
    }

    public function clearHorizontalSpeedMps()
    {
        unset($this->horizontal_speed_mps);
    }

    /**
     * Generated from protobuf field <code>optional double horizontal_speed_mps = 5 [json_name = "horizontalSpeedMps"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setHorizontalSpeedMps($var)
    {
        GPBUtil::checkDouble($var);
        $this->horizontal_speed_mps = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double vertical_speed_mps = 6 [json_name = "verticalSpeedMps"];</code>
     *
     * @return float
     */
    public function getVerticalSpeedMps()
    {
        return isset($this->vertical_speed_mps) ? $this->vertical_speed_mps : 0.0;
    }

    public function hasVerticalSpeedMps()
    {
        return isset($this->vertical_speed_mps);
    }

    public function clearVerticalSpeedMps()
    {
        unset($this->vertical_speed_mps);
    }

    /**
     * Generated from protobuf field <code>optional double vertical_speed_mps = 6 [json_name = "verticalSpeedMps"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setVerticalSpeedMps($var)
    {
        GPBUtil::checkDouble($var);
        $this->vertical_speed_mps = $var;

        return $this;
    }
}

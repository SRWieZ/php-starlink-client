<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/common.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.EventLog</code>
 */
class EventLog extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated .SpaceX.API.Device.UXEvent events = 1 [json_name = "events"];</code>
     */
    private $events;

    /**
     * Generated from protobuf field <code>optional int64 start_timestamp_ns = 2 [json_name = "startTimestampNs"];</code>
     */
    protected $start_timestamp_ns = null;

    /**
     * Generated from protobuf field <code>optional int64 current_timestamp_ns = 3 [json_name = "currentTimestampNs"];</code>
     */
    protected $current_timestamp_ns = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type \SpaceX\API\Device\UXEvent[] $events
     * @type int|string $start_timestamp_ns
     * @type int|string $current_timestamp_ns
     *                  }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated .SpaceX.API.Device.UXEvent events = 1 [json_name = "events"];</code>
     *
     * @return RepeatedField<\SpaceX\API\Device\UXEvent>
     */
    public function getEvents()
    {
        return $this->events;
    }

    /**
     * Generated from protobuf field <code>repeated .SpaceX.API.Device.UXEvent events = 1 [json_name = "events"];</code>
     *
     * @param  \SpaceX\API\Device\UXEvent[]  $var
     * @return $this
     */
    public function setEvents($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \SpaceX\API\Device\UXEvent::class);
        $this->events = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int64 start_timestamp_ns = 2 [json_name = "startTimestampNs"];</code>
     *
     * @return int|string
     */
    public function getStartTimestampNs()
    {
        return isset($this->start_timestamp_ns) ? $this->start_timestamp_ns : 0;
    }

    public function hasStartTimestampNs()
    {
        return isset($this->start_timestamp_ns);
    }

    public function clearStartTimestampNs()
    {
        unset($this->start_timestamp_ns);
    }

    /**
     * Generated from protobuf field <code>optional int64 start_timestamp_ns = 2 [json_name = "startTimestampNs"];</code>
     *
     * @param  int|string  $var
     * @return $this
     */
    public function setStartTimestampNs($var)
    {
        GPBUtil::checkInt64($var);
        $this->start_timestamp_ns = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int64 current_timestamp_ns = 3 [json_name = "currentTimestampNs"];</code>
     *
     * @return int|string
     */
    public function getCurrentTimestampNs()
    {
        return isset($this->current_timestamp_ns) ? $this->current_timestamp_ns : 0;
    }

    public function hasCurrentTimestampNs()
    {
        return isset($this->current_timestamp_ns);
    }

    public function clearCurrentTimestampNs()
    {
        unset($this->current_timestamp_ns);
    }

    /**
     * Generated from protobuf field <code>optional int64 current_timestamp_ns = 3 [json_name = "currentTimestampNs"];</code>
     *
     * @param  int|string  $var
     * @return $this
     */
    public function setCurrentTimestampNs($var)
    {
        GPBUtil::checkInt64($var);
        $this->current_timestamp_ns = $var;

        return $this;
    }
}
